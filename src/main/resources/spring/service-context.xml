<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean name="propertiesURI" class="java.lang.System"
		factory-method="getProperty">
		<constructor-arg index="0" value="server.properties.uri" />
		<!-- property name for properties URI location -->
		<constructor-arg index="1" value="classpath:service.properties" />
		<!-- default location for testing -->
	</bean>
	<bean id="serverProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<ref bean="propertiesURI" />
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false" />
	</bean>
	
	<bean id="polyglotClient" class="bd.ciber.testbed.PolyglotClient">
		<property name="hostname" value="${dap.host}"/>
		<property name="port" value="${dap.port:8184}"/>
		<property name="sslEnabled" value="${dap.sslEnabled:false}"/>
		<property name="username" value="${dap.username:}"/>
		<property name="password" value="${dap.password:}"/>
	</bean>
	
	<bean id="mongoClient" class="com.mongodb.MongoClient" destroy-method="close">
		<constructor-arg type="String" value="${mongodb.host:localhost}"/>
		<constructor-arg type="int" value="${mongodb.port:27017}"/>
	</bean>
	
	<bean id="db" class="com.mongodb.DB" factory-bean="mongoClient" factory-method="getDB">
		<constructor-arg value="${mongodb.db:ciber-testbed}"/>
	</bean>
	
	<bean id="irodsAccount" class="org.irods.jargon.core.connection.IRODSAccount">
		<constructor-arg value="${irods.host}"/>
		<constructor-arg type="int" value="${irods.port}"/>
		<constructor-arg value="${irods.username}"/>
		<constructor-arg value="${irods.password}"/>
		<constructor-arg value="/${irods.zone}/home/${irods.username}"/>
		<constructor-arg value="${irods.zone}"/>
		<constructor-arg value="${irods.resource}"/>
	</bean>
	
	<bean id="irodsFileSystem"  class="org.irods.jargon.core.pub.IRODSFileSystem" factory-method="instance"/>

	<bean id="dataProvider" class="bd.ciber.testbed.IrodsDataProvider">
		<property name="basePath" value="${dataprovider.base.path:/}"/>
	</bean>
	
	<bean id="testbedService" class="bd.ciber.testbed.TestbedService"/>
	
	<bean id="controller" class="bd.ciber.testbed.Controller"/>
	
	<bean id="testBatchRunner" class="bd.ciber.testbed.TestBatchRunner" scope="prototype">
		<property name="controller" ref="controller"/>
		<property name="dataProvider" ref="dataProvider"/>
	</bean>

</beans>